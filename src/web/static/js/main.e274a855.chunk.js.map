{"version":3,"sources":["components/Header.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Input","onShorten","useState","url","setUrl","onSubmit","e","preventDefault","length","alert","console","log","type","placeholder","value","onChange","target","App","shortenedUrl","setShortenedUrl","a","fetch","method","headers","body","JSON","stringify","res","json","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNASeA,EARA,WACX,OACI,wBAAQC,UAAU,SAAlB,SACI,kDC4BGC,EA7BD,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAEb,EAAqBC,mBAAS,IAA9B,mBAAOC,EAAP,KAAWC,EAAX,KAiBA,OACI,uBAAML,UAAU,aAAaM,SAhBhB,SAACC,GACdA,EAAEC,kBAEGJ,GAAOA,EAAIK,OAAS,EACrBC,MAAM,wBAIVC,QAAQC,IAAI,aACZV,EAAU,CAACE,QACXC,EAAO,MAMP,UACI,qBAAKL,UAAU,YAAf,SACI,uBAAOA,UAAU,cAAca,KAAK,OAAOC,YAAY,0BAA0BC,MAAOX,EAAKY,SAAU,SAACT,GAAD,OAAOF,EAAOE,EAAEU,OAAOF,YAElI,uBAAOf,UAAU,gBAAgBa,KAAK,SAASE,MAAM,oBCoBlDG,MA3Cf,WACE,MAAuCf,mBAAS,IAAhD,mBAAOgB,EAAP,KAAoBC,EAApB,KADa,4CAgBb,WAA0BhB,GAA1B,iBAAAiB,EAAA,6DACEV,QAAQC,IAAIR,EAAIA,KAChBO,QAAQC,IAAI,iBAFd,SAGoBU,MAAM,mCAAmC,CACzDC,OAAO,OACPC,QAAQ,CACN,eAAe,oBAEjBC,KAAMC,KAAKC,UAAUvB,KARzB,cAGQwB,EAHR,gBAWqBA,EAAIC,OAXzB,OAWQC,EAXR,OAYEV,EAAgBU,EAAK1B,KAZvB,4CAhBa,sBA+Bb,OACE,sBAAKJ,UAAU,YAAf,UACE,cAAC,EAAD,IACCW,QAAQC,IAAI,YACb,cAAC,EAAD,CAAOV,UAnCE,8CAoCT,mBAAGF,UAAU,OAAb,SACGmB,GAA4B,SC7BtBY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e274a855.chunk.js","sourcesContent":["\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            <h2>URL Shortener</h2>\n        </header>\n    )\n}\n\nexport default Header\n","import { useState } from \"react\"\n\n\nconst Input = ({ onShorten }) => {\n\n    const [url,setUrl] = useState(\"\")\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!url || url.length < 5) {\n            alert(\"Please enter a URL!\")\n            return\n        }\n\n        console.log(\"On Submit\")\n        onShorten({url})\n        setUrl(\"\")\n        \n    }\n\n\n    return (\n        <form className=\"input_form\" onSubmit={onSubmit}>\n            <div className=\"input_div\">\n                <input className=\"input_field\" type=\"text\" placeholder=\"https://www.google.com/\" value={url} onChange={(e) => setUrl(e.target.value)}/>\n            </div>\n            <input className=\"btn btn-block\" type=\"submit\" value=\"Shorten URL\"/>\n        </form>\n    )\n}\n\nexport default Input\n","import { useState } from \"react\"\nimport Header from \"./components/Header\";\nimport Input from \"./components/Input\";\n\nfunction App() {\n  const [shortenedUrl,setShortenedUrl] = useState(\"\")\n  // const shortenUrl = async (url) => {\n  //   console.log(url.url)\n  //   const res = await fetch(\"http://localhost:8080/links/put/\",{\n  //     method:\"POST\",\n  //     headers:{\n  //       'Content-Type':\"application/json\",\n  //     },\n  //     body: JSON.stringify(url)\n  //   }) \n\n  //   const data = await res.json()\n  //   setShortenedUrl(data.url)\n  // }\n\n  async function shortenUrl(url) {\n    console.log(url.url)\n    console.log(\"On shortenUrl\")\n    const res = await fetch(\"http://localhost:8080/links/put/\",{\n      method:\"POST\",\n      headers:{\n        'Content-Type':\"application/json\",\n      },\n      body: JSON.stringify(url)\n    }) \n\n    const data = await res.json()\n    setShortenedUrl(data.url)\n  }\n\n  return (\n    <div className=\"container\">\n      <Header />\n      {console.log(\"Rendered\")}\n      <Input onShorten={shortenUrl} />\n      <p className=\"urlP\">\n        {shortenedUrl ? shortenedUrl:\"\"}\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}